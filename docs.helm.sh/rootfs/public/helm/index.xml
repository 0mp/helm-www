<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Helm</title>
    <link>https://docs.helm.sh/helm/</link>
    <language>en-us</language>
    <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm/</guid>
      <description>

&lt;h2 id=&#34;helm&#34;&gt;helm&lt;/h2&gt;

&lt;p&gt;The Helm package manager for Kubernetes.&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;The Kubernetes package manager&lt;/p&gt;

&lt;p&gt;To begin working with Helm, run the &amp;lsquo;helm init&amp;rsquo; command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ helm init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will install Tiller to your running Kubernetes cluster.
It will also set up any necessary local configuration.&lt;/p&gt;

&lt;p&gt;Common actions from this point include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;helm search:    search for charts&lt;/li&gt;
&lt;li&gt;helm fetch:     download a chart to your local directory to view&lt;/li&gt;
&lt;li&gt;helm install:   upload the chart to Kubernetes&lt;/li&gt;
&lt;li&gt;helm list:      list releases of charts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Environment:
  $HELM_HOME          set an alternative location for Helm files. By default, these are stored in ~/.helm
  $HELM_HOST          set an alternative Tiller host. The format is host:port
  $HELM_NO_PLUGINS    disable plugins. Set HELM_NO_PLUGINS=1 to disable plugins.
  $TILLER_NAMESPACE   set an alternative Tiller namespace (default &amp;ldquo;kube-system&amp;rdquo;)
  $KUBECONFIG         set an alternative Kubernetes configuration file (default &amp;ldquo;~/.kube/config&amp;rdquo;)&lt;/p&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_completion&#34;&gt;helm completion&lt;/a&gt;     - Generate autocompletions script for the specified shell (bash or zsh)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_create&#34;&gt;helm create&lt;/a&gt;     - create a new chart with the given name&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_delete&#34;&gt;helm delete&lt;/a&gt;     - given a release name, delete the release from Kubernetes&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_dependency&#34;&gt;helm dependency&lt;/a&gt;     - manage a chart&amp;rsquo;s dependencies&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_fetch&#34;&gt;helm fetch&lt;/a&gt;   - download a chart from a repository and (optionally) unpack it in local directory&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_get&#34;&gt;helm get&lt;/a&gt;   - download a named release&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_history&#34;&gt;helm history&lt;/a&gt;   - fetch release history&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_home&#34;&gt;helm home&lt;/a&gt;     - displays the location of HELM_HOME&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_init&#34;&gt;helm init&lt;/a&gt;     - initialize Helm on both client and server&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_inspect&#34;&gt;helm inspect&lt;/a&gt;   - inspect a chart&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_install&#34;&gt;helm install&lt;/a&gt;   - install a chart archive&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_lint&#34;&gt;helm lint&lt;/a&gt;     - examines a chart for possible issues&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_list&#34;&gt;helm list&lt;/a&gt;     - list releases&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_package&#34;&gt;helm package&lt;/a&gt;   - package a chart directory into a chart archive&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_plugin&#34;&gt;helm plugin&lt;/a&gt;     - add, list, or remove Helm plugins&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_repo&#34;&gt;helm repo&lt;/a&gt;     - add, list, remove, update, and index chart repositories&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_reset&#34;&gt;helm reset&lt;/a&gt;   - uninstalls Tiller from a cluster&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_rollback&#34;&gt;helm rollback&lt;/a&gt;     - roll back a release to a previous revision&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_search&#34;&gt;helm search&lt;/a&gt;     - search for a keyword in charts&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_serve&#34;&gt;helm serve&lt;/a&gt;   - start a local http web server&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_status&#34;&gt;helm status&lt;/a&gt;     - displays the status of the named release&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_template&#34;&gt;helm template&lt;/a&gt;     - locally render templates&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_test&#34;&gt;helm test&lt;/a&gt;     - test a release&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_upgrade&#34;&gt;helm upgrade&lt;/a&gt;   - upgrade a release&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_verify&#34;&gt;helm verify&lt;/a&gt;     - verify that a chart at the given path has been signed and is valid&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_version&#34;&gt;helm version&lt;/a&gt;   - print the client/server version information&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_completion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_completion/</guid>
      <description>

&lt;h2 id=&#34;helm-completion&#34;&gt;helm completion&lt;/h2&gt;

&lt;p&gt;Generate autocompletions script for the specified shell (bash or zsh)&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;Generate autocompletions script for Helm for the specified shell (bash or zsh).&lt;/p&gt;

&lt;p&gt;This command can generate shell autocompletions. e.g.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ helm completion bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Can be sourced as such&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ source &amp;lt;(helm completion bash)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;helm completion SHELL
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm&#34;&gt;helm&lt;/a&gt;   - The Helm package manager for Kubernetes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_create/</guid>
      <description>

&lt;h2 id=&#34;helm-create&#34;&gt;helm create&lt;/h2&gt;

&lt;p&gt;create a new chart with the given name&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;This command creates a chart directory along with the common files and
directories used in a chart.&lt;/p&gt;

&lt;p&gt;For example, &amp;lsquo;helm create foo&amp;rsquo; will create a directory structure that looks
something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foo/
  |
  |- .helmignore   # Contains patterns to ignore when packaging Helm charts.
  |
  |- Chart.yaml    # Information about your chart
  |
  |- values.yaml   # The default values for your templates
  |
  |- charts/       # Charts that this chart depends on
  |
  |- templates/    # The template files
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;lsquo;helm create&amp;rsquo; takes a path for an argument. If directories in the given path
do not exist, Helm will attempt to create them as it goes. If the given
destination exists and there are files in that directory, conflicting files
will be overwritten, but other files will be left alone.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm create NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;  -p, --starter string   the named Helm starter scaffold
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm&#34;&gt;helm&lt;/a&gt;   - The Helm package manager for Kubernetes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_delete/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_delete/</guid>
      <description>

&lt;h2 id=&#34;helm-delete&#34;&gt;helm delete&lt;/h2&gt;

&lt;p&gt;given a release name, delete the release from Kubernetes&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;This command takes a release name, and then deletes the release from Kubernetes.
It removes all of the resources associated with the last release of the chart.&lt;/p&gt;

&lt;p&gt;Use the &amp;lsquo;&amp;ndash;dry-run&amp;rsquo; flag to see which releases will be deleted without actually
deleting them.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm delete [flags] RELEASE_NAME [...]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --dry-run              simulate a delete
      --no-hooks             prevent hooks from running during deletion
      --purge                remove the release from the store and make its name free for later use
      --timeout int          time in seconds to wait for any individual Kubernetes operation (like Jobs for hooks) (default 300)
      --tls                  enable TLS for request
      --tls-ca-cert string   path to TLS CA certificate file (default &amp;quot;$HELM_HOME/ca.pem&amp;quot;)
      --tls-cert string      path to TLS certificate file (default &amp;quot;$HELM_HOME/cert.pem&amp;quot;)
      --tls-key string       path to TLS key file (default &amp;quot;$HELM_HOME/key.pem&amp;quot;)
      --tls-verify           enable TLS for request and verify remote
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm&#34;&gt;helm&lt;/a&gt;   - The Helm package manager for Kubernetes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_dependency/</guid>
      <description>

&lt;h2 id=&#34;helm-dependency&#34;&gt;helm dependency&lt;/h2&gt;

&lt;p&gt;manage a chart&amp;rsquo;s dependencies&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;Manage the dependencies of a chart.&lt;/p&gt;

&lt;p&gt;Helm charts store their dependencies in &amp;lsquo;charts/&amp;rsquo;. For chart developers, it is
often easier to manage a single dependency file (&amp;lsquo;requirements.yaml&amp;rsquo;)
which declares all dependencies.&lt;/p&gt;

&lt;p&gt;The dependency commands operate on that file, making it easy to synchronize
between the desired dependencies and the actual dependencies stored in the
&amp;lsquo;charts/&amp;rsquo; directory.&lt;/p&gt;

&lt;p&gt;A &amp;lsquo;requirements.yaml&amp;rsquo; file is a YAML file in which developers can declare chart
dependencies, along with the location of the chart and the desired version.
For example, this requirements file declares two dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# requirements.yaml
dependencies:
- name: nginx
  version: &amp;quot;1.2.3&amp;quot;
  repository: &amp;quot;https://example.com/charts&amp;quot;
- name: memcached
  version: &amp;quot;3.2.1&amp;quot;
  repository: &amp;quot;https://another.example.com/charts&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &amp;lsquo;name&amp;rsquo; should be the name of a chart, where that name must match the name
in that chart&amp;rsquo;s &amp;lsquo;Chart.yaml&amp;rsquo; file.&lt;/p&gt;

&lt;p&gt;The &amp;lsquo;version&amp;rsquo; field should contain a semantic version or version range.&lt;/p&gt;

&lt;p&gt;The &amp;lsquo;repository&amp;rsquo; URL should point to a Chart Repository. Helm expects that by
appending &amp;lsquo;/index.yaml&amp;rsquo; to the URL, it should be able to retrieve the chart
repository&amp;rsquo;s index. Note: &amp;lsquo;repository&amp;rsquo; can be an alias. The alias must start
with &amp;lsquo;alias:&amp;rsquo; or &amp;lsquo;@&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;Starting from 2.2.0, repository can be defined as the path to the directory of
the dependency charts stored locally. The path should start with a prefix of
&amp;ldquo;file://&amp;ldquo;. For example,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# requirements.yaml
dependencies:
- name: nginx
  version: &amp;quot;1.2.3&amp;quot;
  repository: &amp;quot;file://../dependency_chart/nginx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the dependency chart is retrieved locally, it is not required to have the
repository added to helm by &amp;ldquo;helm add repo&amp;rdquo;. Version matching is also supported
for this case.&lt;/p&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm&#34;&gt;helm&lt;/a&gt;   - The Helm package manager for Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_dependency_build&#34;&gt;helm dependency build&lt;/a&gt;     - rebuild the charts/ directory based on the requirements.lock file&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_dependency_list&#34;&gt;helm dependency list&lt;/a&gt;   - list the dependencies for the given chart&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_dependency_update&#34;&gt;helm dependency update&lt;/a&gt;   - update charts/ based on the contents of requirements.yaml&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_dependency_build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_dependency_build/</guid>
      <description>

&lt;h2 id=&#34;helm-dependency-build&#34;&gt;helm dependency build&lt;/h2&gt;

&lt;p&gt;rebuild the charts/ directory based on the requirements.lock file&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;Build out the charts/ directory from the requirements.lock file.&lt;/p&gt;

&lt;p&gt;Build is used to reconstruct a chart&amp;rsquo;s dependencies to the state specified in
the lock file. This will not re-negotiate dependencies, as &amp;lsquo;helm dependency update&amp;rsquo;
does.&lt;/p&gt;

&lt;p&gt;If no lock file is found, &amp;lsquo;helm dependency build&amp;rsquo; will mirror the behavior
of &amp;lsquo;helm dependency update&amp;rsquo;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm dependency build [flags] CHART
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --keyring string   keyring containing public keys (default &amp;quot;~/.gnupg/pubring.gpg&amp;quot;)
      --verify           verify the packages against signatures
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_dependency&#34;&gt;helm dependency&lt;/a&gt;     - manage a chart&amp;rsquo;s dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_dependency_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_dependency_list/</guid>
      <description>

&lt;h2 id=&#34;helm-dependency-list&#34;&gt;helm dependency list&lt;/h2&gt;

&lt;p&gt;list the dependencies for the given chart&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;List all of the dependencies declared in a chart.&lt;/p&gt;

&lt;p&gt;This can take chart archives and chart directories as input. It will not alter
the contents of a chart.&lt;/p&gt;

&lt;p&gt;This will produce an error if the chart cannot be loaded. It will emit a warning
if it cannot find a requirements.yaml.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm dependency list [flags] CHART
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_dependency&#34;&gt;helm dependency&lt;/a&gt;     - manage a chart&amp;rsquo;s dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_dependency_update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_dependency_update/</guid>
      <description>

&lt;h2 id=&#34;helm-dependency-update&#34;&gt;helm dependency update&lt;/h2&gt;

&lt;p&gt;update charts/ based on the contents of requirements.yaml&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;Update the on-disk dependencies to mirror the requirements.yaml file.&lt;/p&gt;

&lt;p&gt;This command verifies that the required charts, as expressed in &amp;lsquo;requirements.yaml&amp;rsquo;,
are present in &amp;lsquo;charts/&amp;rsquo; and are at an acceptable version. It will pull down
the latest charts that satisfy the dependencies, and clean up old dependencies.&lt;/p&gt;

&lt;p&gt;On successful update, this will generate a lock file that can be used to
rebuild the requirements to an exact version.&lt;/p&gt;

&lt;p&gt;Dependencies are not required to be represented in &amp;lsquo;requirements.yaml&amp;rsquo;. For that
reason, an update command will not remove charts unless they are (a) present
in the requirements.yaml file, but (b) at the wrong version.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm dependency update [flags] CHART
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --keyring string   keyring containing public keys (default &amp;quot;~/.gnupg/pubring.gpg&amp;quot;)
      --skip-refresh     do not refresh the local repository cache
      --verify           verify the packages against signatures
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_dependency&#34;&gt;helm dependency&lt;/a&gt;     - manage a chart&amp;rsquo;s dependencies&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_fetch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_fetch/</guid>
      <description>

&lt;h2 id=&#34;helm-fetch&#34;&gt;helm fetch&lt;/h2&gt;

&lt;p&gt;download a chart from a repository and (optionally) unpack it in local directory&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;Retrieve a package from a package repository, and download it locally.&lt;/p&gt;

&lt;p&gt;This is useful for fetching packages to inspect, modify, or repackage. It can
also be used to perform cryptographic verification of a chart without installing
the chart.&lt;/p&gt;

&lt;p&gt;There are options for unpacking the chart after download. This will create a
directory for the chart and uncompress into that directory.&lt;/p&gt;

&lt;p&gt;If the &amp;ndash;verify flag is specified, the requested chart MUST have a provenance
file, and MUST pass the verification process. Failure in any part of this will
result in an error, and the chart will not be saved locally.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm fetch [flags] [chart URL | repo/chartname] [...]
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --ca-file string       verify certificates of HTTPS-enabled servers using this CA bundle
      --cert-file string     identify HTTPS client using this SSL certificate file
  -d, --destination string   location to write the chart. If this and tardir are specified, tardir is appended to this (default &amp;quot;.&amp;quot;)
      --devel                use development versions, too. Equivalent to version &#39;&amp;gt;0.0.0-0&#39;. If --version is set, this is ignored.
      --key-file string      identify HTTPS client using this SSL key file
      --keyring string       keyring containing public keys (default &amp;quot;~/.gnupg/pubring.gpg&amp;quot;)
      --prov                 fetch the provenance file, but don&#39;t perform verification
      --repo string          chart repository url where to locate the requested chart
      --untar                if set to true, will untar the chart after downloading it
      --untardir string      if untar is specified, this flag specifies the name of the directory into which the chart is expanded (default &amp;quot;.&amp;quot;)
      --verify               verify the package against its signature
      --version string       specific version of a chart. Without this, the latest version is fetched
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm&#34;&gt;helm&lt;/a&gt;   - The Helm package manager for Kubernetes.&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://docs.helm.sh/helm/helm_get/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
      <guid>https://docs.helm.sh/helm/helm_get/</guid>
      <description>

&lt;h2 id=&#34;helm-get&#34;&gt;helm get&lt;/h2&gt;

&lt;p&gt;download a named release&lt;/p&gt;

&lt;h3 id=&#34;synopsis&#34;&gt;Synopsis&lt;/h3&gt;

&lt;p&gt;This command shows the details of a named release.&lt;/p&gt;

&lt;p&gt;It can be used to get extended information about the release, including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The values used to generate the release&lt;/li&gt;
&lt;li&gt;The chart used to generate the release&lt;/li&gt;
&lt;li&gt;The generated manifest file&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, this prints a human readable collection of information about the
chart, the supplied values, and the generated manifest file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;helm get [flags] RELEASE_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options&#34;&gt;Options&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --revision int32       get the named release with revision
      --tls                  enable TLS for request
      --tls-ca-cert string   path to TLS CA certificate file (default &amp;quot;$HELM_HOME/ca.pem&amp;quot;)
      --tls-cert string      path to TLS certificate file (default &amp;quot;$HELM_HOME/cert.pem&amp;quot;)
      --tls-key string       path to TLS key file (default &amp;quot;$HELM_HOME/key.pem&amp;quot;)
      --tls-verify           enable TLS for request and verify remote
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;options-inherited-from-parent-commands&#34;&gt;Options inherited from parent commands&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;      --debug                     enable verbose output
      --home string               location of your Helm config. Overrides $HELM_HOME (default &amp;quot;~/.helm&amp;quot;)
      --host string               address of Tiller. Overrides $HELM_HOST
      --kube-context string       name of the kubeconfig context to use
      --tiller-namespace string   namespace of Tiller (default &amp;quot;kube-system&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;see-also&#34;&gt;SEE ALSO&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm&#34;&gt;helm&lt;/a&gt;   - The Helm package manager for Kubernetes.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_get_hooks&#34;&gt;helm get hooks&lt;/a&gt;   - download all hooks for a named release&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_get_manifest&#34;&gt;helm get manifest&lt;/a&gt;     - download the manifest for a named release&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../helm/#helm_get_values&#34;&gt;helm get values&lt;/a&gt;     - download the values file for a named release&lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&#34;auto-generated-by-spf13-cobra-on-25-jan-2018&#34;&gt;Auto generated by spf13/cobra on 25-Jan-2018&lt;/h6&gt;
</description>
    </item>
    
  </channel>
</rss>
